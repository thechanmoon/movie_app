{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovieData","a","axios","get","data","setState","renderMovie","console","log","movie","medium_cover_image","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAiCeA,MA1Bf,YAAuD,EAAvCC,GAAwC,IAArCC,EAAoC,EAApCA,KAAKC,EAA+B,EAA/BA,MAAMC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC/C,OACI,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAE7B,wBAAIK,UAAU,iBAAiBD,EAAOI,KAAI,SAACC,EAAMC,GAAP,OAAiB,wBAAIC,IAAOD,GAAQD,OAC9E,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAE,KAA/C,UC8EGC,G,kNAxFbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,a,sBAAe,8BAAAC,EAAA,sEAcwBC,IAAMC,IAAN,yDAdxB,gBAcMJ,EAdN,EAcNK,KAAMA,KAAML,OAWnB,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAzBrB,2C,EA2CfQ,YAAc,WACb,IACQP,EAAU,EAAKF,MAAfE,OAGP,OAFAQ,QAAQC,IAAI,wBACZD,QAAQC,IAAIT,GAEVA,EAAOR,KAAI,SAAAkB,GAAK,OAOd,kBAAC,EAAD,CAAOf,IAAOe,EAAM3B,GAAKA,GAAI2B,EAAM3B,GAAIC,KAAM0B,EAAM1B,KAAMC,MAAOyB,EAAMzB,MAAOC,QAASwB,EAAMxB,QAASC,OAAQuB,EAAMC,mBAAoBvB,OAASsB,EAAMtB,a,kEAjB1JwB,KAAKX,iB,+BAuBP,IAGSF,EAAaa,KAAKd,MAAlBC,UACP,OACE,6BAASV,UAAY,aACpBU,EACC,yBAAKV,UAAY,UACf,0BAAMA,UAAY,gBAAlB,eAGJ,yBAAKA,UAAY,UAChBuB,KAAKL,oB,GAjFMM,IAAMC,YCExBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.86aa9178.chunk.js","sourcesContent":["import React from 'react';\nimport Proptypes from 'prop-types'\nimport './Movie.css'\n\n// function Movie({id,year,title,summary,poster}){\n//     return<div>Movie component</div>\n// }\nfunction Movie({id,year,title,summary, poster, genres}){\nreturn (\n    <div className=\"movie\">\n        <img src={poster} alt={title} title={title}/>\n        <div className=\"moive__data\">\n            <h3 className=\"movie__title\">{title}</h3>\n            <h5 className=\"movie__year\">{year}</h5>\n            {/* <ul>{genres.map((genre,index )=> <li>{genre}</li>)}</ul> */}\n            <ul className=\"movie__genres\">{genres.map((genre,index )=> <li key = {index}>{genre}</li>)}</ul>\n            <p className=\"movie__summary\">{summary.slice(0,140)}...</p>\n        </div>\n    </div>\n    )\n}\n\nMovie.propTypes = {\n    id: Proptypes.number.isRequired,\n    year: Proptypes.number.isRequired,\n    title: Proptypes.string.isRequired,\n    summary: Proptypes.string.isRequired,\n    poster: Proptypes.string.isRequired,\n    genres: Proptypes.arrayOf(Proptypes.string).isRequired\n}\n\n\n\nexport default Movie; ","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport './App.css';\nclass App extends React.Component {\n  // let index = 0;\n  state = {\n    isLoading: true,\n    movies: []\n  }\n\n  getMovieData = async () => \n  {\n    // const movies = await axios.get(\"https://yts.mx/api/v2/list_movies.json\");\n    // const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    //const recv_data = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    //const movies = recv_data.data.data.movies;\n    // const {\n    //   data:{\n    //     data:\n    //       {movies}\n    //     }\n    //   } = await axios.get(\"https://yts.mx/api/v2/list_movies.json\");\n\n    // const {data:{data:{movies}}} = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n    const {data:{data:{movies}}} = await axios.get(`https://yts.mx/api/v2/list_movies.json?sort_by=rating`);\n    // const {data:{data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    \n\n    // console.log(\"in getMovieData\");\n    // console.log(movies)\n    // console.log(\"loging start\")\n    // console.log(movies.data)\n    // console.log(movies.data.data)\n    // console.log(movies.data.data.movies)\n    //this.setState({movies: recv_data.data.data.moives})\n    this.setState({movies, isLoading: false})\n    // console.log(this.state.movies)\n  }\n\n  componentDidMount()\n  {\n    // let index = 0;\n    // for(index = 0; index < 10000; index++)\n    // {\n    //   console.log(index);\n    // }\n    // setTimeout(\n    //   ()=>{this.setState({isLoading: false});},3000\n    // )\n    this.getMovieData();\n\n  }\n\n  renderMovie = () =>\n  {\n    const {movies} = this.state\n    console.log(\"in the renderMovie()\");\n    console.log(movies);\n    return( \n      movies.map(movie=> \n        // <Movie key = {movie.id} \n        //         id = {movie.id} \n        //         year = {movie.year} \n        //         summary = {movie.summary} \n        //         poster = {movie.medium_cover_image} \n        //         title={movie.title}/>)\n        <Movie key = {movie.id}  id={movie.id} year={movie.year} title={movie.title} summary={movie.summary} poster={movie.medium_cover_image} genres= {movie.genres}/>)\n    )\n    // return <Movie title={this.state.movies[0].title}></Movie>\n  }\n\n  render()\n  {\n    // console.log(\"in render()\")\n    // console.log(this.state.movies)\n    const {isLoading} = this.state;\n    return(\n      <section className = \"container\">\n      {isLoading ? \n        <div className = \"loader\">\n          <span className = \"loader__text\">Loading...</span>\n        </div>\n      : \n      <div className = \"movies\">\n      {this.renderMovie()} \n      </div>  \n      }\n      \n      </section>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}